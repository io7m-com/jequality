<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>com.io7m.jequality 2.0.0 Documentation: 2.1. Annotations</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://github.com/io7m/jequality">com.io7m.jequality</a> 2.0.0
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">2. Usage</td><td class="st200_navbar_up_title_cell">2. Usage</td><td class="st200_navbar_next_title_cell">2.2. Complaints</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p2.xhtml#st200_p2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s2.xhtml#st200_p2s2">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p2s1" href="#st200_p2s1">2.1</a></div><div class="st200_section_title">Annotations</div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p2s1ss1" href="#st200_p2s1ss1">2.1.1</a></div><div class="st200_subsection_title">Overview</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss1pg1" href="#st200_p2s1ss1pg1">1</a></div><div class="st200_paragraph">
          In Java, if a class does not override the 
          <a class="st200_link_external" href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)">equals</a>
          method provided by the standard 
          <a class="st200_link_external" href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a>
          type, then the class effectively has <span class="st200_term term">reference equality</span>.
          That is, the <span class="st200_term function">equals</span> method simply compares
          the addresses of the operands. In some cases this is desirable; in most
          cases it is not. It is very easy to forget to override an
          <span class="st200_term function">equals</span> method, leading to extremely
          subtle and dangerous bugs.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss1pg2" href="#st200_p2s1ss1pg2">2</a></div><div class="st200_paragraph">
          The <span class="st200_term package">com.io7m.jequality</span> package
          provides a set of annotations and a validator to check that classes
          conform to their annotations. Essentially, the programmer annotates a
          class with an annotation that states that the class is expected to
          implement either <span class="st200_term term">structural</span> or
          <span class="st200_term term">reference</span> equality. A class is assumed
          to implement <span class="st200_term term">structural</span> equality iff
          it overrides <span class="st200_term function">equals</span>. The provided
          validator checks that classes are annotated, and that they implement
          the type of equality that their annotations claim. As an extra safety
          check, the validator checks that if <span class="st200_term function">equals</span>
          is overridden, then <span class="st200_term function">hashCode</span> is
          also overridden in the same class. The validator is not capable of checking that an
          overridden <span class="st200_term function">equals</span> actually does
          implement <span class="st200_term term">structural</span> equality (and does not,
          for example, simply delegate to <span class="st200_term type">java.lang.Object</span>).
          Solving this problem is undecidable in general.
        </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p2s1ss2" href="#st200_p2s1ss2">2.1.2</a></div><div class="st200_subsection_title">Validation</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss2pg1" href="#st200_p2s1ss2pg1">1</a></div><div class="st200_paragraph">
          Validation of classes is expected to occur in the test suite of
          the project using the <span class="st200_term package">com.io7m.jequality</span> package.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss2pg2" href="#st200_p2s1ss2pg2">2</a></div><div class="st200_paragraph">
          As an example:
        </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s1ss2fo1" href="#st200_p2s1ss2fo1">2.1.2.1. Validation (RefEquality)</a></div><pre class="st200_verbatim">@EqualityReference public final class RefEquality
{

}

public final class RefEqualityTests
{
  @Test public void testEquality()
  {
    Assert.assertEquals(ValidatorResult.VALIDATION_OK, EqualityValidator
      .validateClass(
        RefEquality.class,
        AnnotationRequirement.ANNOTATIONS_REQUIRED,
        true));
  }
}</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss2pg3" href="#st200_p2s1ss2pg3">3</a></div><div class="st200_paragraph">
          The <span class="st200_term type">RefEquality</span> class uses the
          <a class="st200_link_external" href="apidocs/com/io7m/jequality/annotations/EqualityReference.html">EqualityReference</a>
          annotation to indicate that that it implements reference equality.
          The validator checks that this is indeed the case. The following
          test fails:
        </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s1ss2fo2" href="#st200_p2s1ss2fo2">2.1.2.2. Validation (RefEqualityWrong)</a></div><pre class="st200_verbatim">@EqualityReference public final class RefEqualityWrong
{
  @Override public boolean equals(
    final @Nullable Object other)
  {
    return false;
  }

  @Override public int hashCode()
  {
    return 0;
  }
}

public final class RefEqualityTests
{
  @Test public void testReferenceEqualityNot()
  {
    Assert.assertEquals(
      ValidatorResult.VALIDATION_ERROR_WANTED_REFERENCE_EQUALITY,
      EqualityValidator.validateClass(
        RefEqualityWrong.class,
        AnnotationRequirement.ANNOTATIONS_REQUIRED,
        true));
  }
}</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss2pg4" href="#st200_p2s1ss2pg4">4</a></div><div class="st200_paragraph">
          The <span class="st200_term type">RefEqualityWrong</span> class claims that
          it implements reference equality, and yet overrides
          <span class="st200_term function">equals</span>. The validator will catch
          this and the test will fail.
        </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s1ss2fo3" href="#st200_p2s1ss2fo3">2.1.2.3. Validation (StructuralEquality)</a></div><pre class="st200_verbatim">@EqualityStructural public final class StructuralEquality
{
  @Override public boolean equals(
    final @Nullable Object other)
  {
    return false;
  }

  @Override public int hashCode()
  {
    return 0;
  }
}

public final class RefEqualityTests
{
  @Test public void testStructuralEquality()
  {
    Assert.assertEquals(ValidatorResult.VALIDATION_OK, EqualityValidator
      .validateClass(
        StructuralEquality.class,
        AnnotationRequirement.ANNOTATIONS_REQUIRED,
        true));
  }
}</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1ss2pg5" href="#st200_p2s1ss2pg5">5</a></div><div class="st200_paragraph">
          The <span class="st200_term type">StructuralEquality</span> class claims 
          to implement structural equality and does appear to override
          <span class="st200_term function">equals</span> (even though the equality
          relation it defines is not correct). The validator assumes that this
          class is correct.
        </div></div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p2.xhtml#st200_p2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s2.xhtml#st200_p2s2">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">2. Usage</td><td class="st200_navbar_up_title_cell">2. Usage</td><td class="st200_navbar_next_title_cell">2.2. Complaints</td></tr></table></div></div></body></html>
